create schema SE3330;
set search_path = SE3330;

CREATE TABLE IF NOT EXISTS roles
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_unique UNIQUE (name)
)

CREATE TABLE IF NOT EXISTS users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    student_card_id character varying(50) COLLATE pg_catalog."default",
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role_id integer,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT studentcardid_unique UNIQUE (student_card_id),
    CONSTRAINT username_unique UNIQUE (username),
    CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS courses
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    section_count integer NOT NULL DEFAULT 0,
    CONSTRAINT courses_pkey PRIMARY KEY (id),
    CONSTRAINT courses_name_unique UNIQUE (name)
)

CREATE TABLE IF NOT EXISTS sections
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    room_num character varying(10) COLLATE pg_catalog."default" NOT NULL,
    num_students integer NOT NULL DEFAULT 0,
    course_id integer,
    professor_id integer NOT NULL,
    CONSTRAINT sections_pkey PRIMARY KEY (id),
    CONSTRAINT courseid_professor_assignment UNIQUE (room_num, course_id, professor_id),
    CONSTRAINT professor_id_fkey FOREIGN KEY (professor_id)
        REFERENCES users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT sections_course_id_fkey FOREIGN KEY (course_id)
        REFERENCES courses (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS meeting_times
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    section_id integer,
    day_of_week integer,
    start_time time without time zone,
    end_time time without time zone,
    CONSTRAINT meeting_times_pkey PRIMARY KEY (id),
    CONSTRAINT meeting_time_by_section_unique UNIQUE (section_id, day_of_week, start_time, end_time),
    CONSTRAINT meeting_times_section_id_fkey FOREIGN KEY (section_id)
        REFERENCES sections (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS attendance_logs
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    student_id integer,
    section_id integer,
    date_time timestamp without time zone,
    excused boolean,
    is_absent boolean DEFAULT false,
    CONSTRAINT attendance_logs_pkey PRIMARY KEY (id),
    CONSTRAINT attendance_logs_section_id_fkey FOREIGN KEY (section_id)
        REFERENCES sections (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT attendance_logs_student_id_fkey FOREIGN KEY (student_id)
        REFERENCES users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS enrollments
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    section_id integer,
    student_id integer,
    CONSTRAINT enrollments_pkey PRIMARY KEY (id),
    CONSTRAINT section_student_unique UNIQUE (section_id, student_id),
    CONSTRAINT enrollments_section_id_fkey FOREIGN KEY (section_id)
        REFERENCES sections (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT enrollments_student_id_fkey FOREIGN KEY (student_id)
        REFERENCES users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)